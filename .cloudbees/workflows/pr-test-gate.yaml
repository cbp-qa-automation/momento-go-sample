apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: My workflow
on:
  workflow_dispatch:

jobs:
  code-quality:
    outputs:
      env: ${{ steps.setvalues.outputs.envvalue }}
      tags: ${{ steps.setvalues.outputs.tagvalue }}
      testrun: ${{ steps.setvalues.outputs.test-run }}
    steps:
      
      - uses: cloudbees-io/checkout@v1
      - name: Say hello
        id: setvalues
        uses: docker://alpine/git:v2.49.1
        shell: sh
        run: |
          echo "true" > $CLOUDBEES_OUTPUTS/test-run
          echo "hello world"
          git log --pretty=format:"%s" -n 1
          export ENV=$(git log --pretty=format:"%s" -n 1 | grep -o '\[Env:[^]]*\]' | sed 's/\[Env:\(.*\)\]/\1/' )
          echo "Env"+$ENV
          export GREP=$(git log --pretty=format:"%s" -n 1 | grep -o '\[Grep:[^]]*\]' | sed 's/\[Grep:\(.*\)\]/\1/' ) || GREP=''
          echo "Grep"+$GREP
          export GREPINV=$(git log --pretty=format:"%s" -n 1 | grep -o '\[GrepInv:[^]]*\]' | sed 's/\[GrepInv:\(.*\)\]/\1/' ) || GREPINV=''
          echo "Non-Grep"+$GREPINV
          echo $ENV > $CLOUDBEES_OUTPUTS/envvalue
          echo "--grep=\"${GREP}\" --grep-invert=\"${GREPINV}\"" > $CLOUDBEES_OUTPUTS/tagvalue
          
  echo:
    needs: ['code-quality']
    steps:
      - name: Echo values
        id: values
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo ${{ needs.code-quality.outputs.testrun  }}
          echo ${{ needs.code-quality.outputs.env  }}
          echo ${{ needs.code-quality.outputs.tags  }}
    
  test:
    needs: ['code-quality']
    if: ${{ needs.code-quality.outputs.testrun == 'true' }}
    steps:
      - uses: cloudbees-io/checkout@v1
      - name: Echo values
        id: test
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo ${{ needs.code-quality.outputs.testrun  }}
          echo ${{ needs.code-quality.outputs.env  }}
          echo ${{ needs.code-quality.outputs.tags  }}
    
